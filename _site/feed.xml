<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sarah Chen</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 12 Dec 2018 00:14:17 -0800</pubDate>
    <lastBuildDate>Wed, 12 Dec 2018 00:14:17 -0800</lastBuildDate>
    <generator>Jekyll v3.7.4</generator>
    
      <item>
        <title>Quibbles 1</title>
        <description>&lt;p&gt;Ursula K Le Guin quotes&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I believe that maturity is not an outgrowing, but a growing up: that an adult is not a dead child, but a child who survived.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The opposite of spare time is, I guess, occupied time. In my case I still don’t know what spare time is because all my time is occupied. It always has been and it is now. It’s occupied by living.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I keep reading voraciously to find the answer. What’s my question though? I have this unsettling unease where I keep wanting to settle down. An unreachable itch that won’t rest until I figure out what is is that I do best. Where am I going? What marks the end? What is my destination?&lt;/p&gt;

&lt;p&gt;Sometimes it’s just about going out there and doing it. Whatever ‘it’ refers to.&lt;/p&gt;
</description>
        <pubDate>Sun, 21 Oct 2018 18:20:26 -0700</pubDate>
        <link>http://localhost:4000/quibbles/2018/10/21/Quibbles-1.html</link>
        <guid isPermaLink="true">http://localhost:4000/quibbles/2018/10/21/Quibbles-1.html</guid>
        
        
        <category>Quibbles</category>
        
      </item>
    
      <item>
        <title>Online reading list</title>
        <description>&lt;p&gt;Will probably need to keep this post updated.&lt;/p&gt;

&lt;p&gt;Side projects to work on:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtu.be/mvGOv9KEJWg&quot;&gt;AR portal to another world&lt;/a&gt;!
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.raywenderlich.com/5516-building-a-portal-app-in-arkit-getting-started&quot;&gt;https://www.raywenderlich.com/5516-building-a-portal-app-in-arkit-getting-started&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.raywenderlich.com/5519-building-a-portal-app-in-arkit-adding-objects&quot;&gt;https://www.raywenderlich.com/5519-building-a-portal-app-in-arkit-adding-objects&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;People to follow:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/nathangitter&quot;&gt;Nathan Gitter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/yumaSoerianto&quot;&gt;Yuma&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/AndyyHope&quot;&gt;Andy Hope&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;body push oriented lines. how?! &lt;a href=&quot;https://twitter.com/zachlieberman/status/1044399106007871488&quot;&gt;Zach Lieberman&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Simple chat app to send ar stickers!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To save for later:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nytimes.com/2018/09/30/us/samantha-bee-cecile-richards-self-doubt.html&quot;&gt;Overcoming self-doubt&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;“Start before you’re ready. Because if you wait until everything is lined up — your kids are the right age, or you’ve got the right degrees, or you have the right clothes — then life is going to pass you by.” - Samantha Richards&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18104814&quot;&gt;Best Textbooks in each subject&lt;/a&gt; &amp;lt;- This is a link.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Blogs to check on:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Patrick Collision link on other blogs to follow: &lt;a href=&quot;https://patrickcollison.com/people&quot;&gt;blogs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Article links: &lt;a href=&quot;https://nintil.com/2018/09/09/links-20/#more-11801&quot;&gt;https://nintil.com/2018/09/09/links-20/#more-11801&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On learning how to create a webserver:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ruslanspivak.com/lsbaws-part1/&quot;&gt;https://ruslanspivak.com/lsbaws-part1/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/from-the-scratch/http-server-what-do-you-need-to-know-to-build-a-simple-http-server-from-scratch-d1ef8945e4fa&quot;&gt;https://medium.com/from-the-scratch/http-server-what-do-you-need-to-know-to-build-a-simple-http-server-from-scratch-d1ef8945e4fa&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Creating and figuring out how messaging apps work:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://codetiburon.com/create-chat-app-like-whatsapp/&quot;&gt;https://codetiburon.com/create-chat-app-like-whatsapp/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How does data flow between server and client?
I think people usually use websockets; I’m not sure where I heard of this before though but after quick googling it looks like websockets are the next step after creating a server. I suppose I could use libraries like StarScream? And I suppose &lt;a href=&quot;https://www.raywenderlich.com/861-websockets-on-ios-with-starscream&quot;&gt;https://www.raywenderlich.com/861-websockets-on-ios-with-starscream&lt;/a&gt; actually lays out building a simple chat app&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Data flow&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;to be filled in.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Extras:&lt;/p&gt;

&lt;p&gt;NSMutableArray deep dive:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/22591296/what-is-the-data-structure-behind-nsmutablearray&quot;&gt;https://stackoverflow.com/questions/22591296/what-is-the-data-structure-behind-nsmutablearray&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ciechanowski.me/blog/2014/03/05/exposing-nsmutablearray/&quot;&gt;http://ciechanowski.me/blog/2014/03/05/exposing-nsmutablearray/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On C:
&lt;a href=&quot;https://medium.com/@wrongway4you/why-should-every-programmer-learn-c-ff490ad984bf&quot;&gt;https://medium.com/@wrongway4you/why-should-every-programmer-learn-c-ff490ad984bf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Spring 16 61B Lectures:
&lt;a href=&quot;https://www.youtube.com/watch?v=LVu7SOLNCWM&amp;amp;list=PLnp31xXvnfRrpDf-Wbt2tSVOH2Q0TLwJf&quot;&gt;https://www.youtube.com/watch?v=LVu7SOLNCWM&amp;amp;list=PLnp31xXvnfRrpDf-Wbt2tSVOH2Q0TLwJf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLPcncwcN2UkazPbL42D-RiJL7Q_Kc9zWx&quot;&gt;https://www.youtube.com/playlist?list=PLPcncwcN2UkazPbL42D-RiJL7Q_Kc9zWx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Data structures summary:&lt;/p&gt;

&lt;p&gt;super helpful to think about what data structures are and how to approach increasing efficiency and performance through combination of understanding problem type and what to solve
&lt;a href=&quot;https://www.youtube.com/watch?v=i-OuY5o_G8g&amp;amp;index=7&amp;amp;list=PL8FaHk7qbOD50LnOXTSpYgnVJQTIVFsmI&quot;&gt;https://www.youtube.com/watch?v=i-OuY5o_G8g&amp;amp;index=7&amp;amp;list=PL8FaHk7qbOD50LnOXTSpYgnVJQTIVFsmI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recommended technical reading:
&lt;a href=&quot;https://blog.codinghorror.com/recommended-reading-for-developers/&quot;&gt;https://blog.codinghorror.com/recommended-reading-for-developers/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currently reading Code Complete 2!&lt;/p&gt;

&lt;p&gt;I need to read more code design books.&lt;/p&gt;
</description>
        <pubDate>Sun, 30 Sep 2018 18:20:26 -0700</pubDate>
        <link>http://localhost:4000/goodreads/2018/09/30/Online-reading-list.html</link>
        <guid isPermaLink="true">http://localhost:4000/goodreads/2018/09/30/Online-reading-list.html</guid>
        
        
        <category>GoodReads</category>
        
      </item>
    
      <item>
        <title>Reacting to change</title>
        <description>&lt;p&gt;For this post I want to try out the Socratic method I happened upon in this new book I’m reading, &lt;em&gt;The Consolations of Philosophy&lt;/em&gt; by Alain de Botton.&lt;/p&gt;

&lt;p&gt;Apparently I’ll need to:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Locate a statement confidently described as common sense. So for me that statement is:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;“Change is hard to get used to.”&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Imagine the statement is false by searching for situations or context the statement would not be true.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;Could one ever remove comparison points and set the ‘changed state’ as the ‘base state’?&lt;/em&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Could a person ever not need to change and ‘naturally’ assimilate to situations through ignorance of any change that may or may not have happened?&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If the statement contains an exception, the statement is not precise or is false.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;It is possible to mimic a blank slate and open mindset and not require change.&lt;/em&gt;&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;It is possible to not need to get used to change.&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Change the original statement to take the exception into account.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;Change is perception that can involve either adjustment, or the ability to take every situation as new such that all change is new. In other words, change is the same as change having not occurred.&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;“The product of thought is superior to the product of intuition.”&lt;/p&gt;

&lt;p&gt;tl;dr. Think about counter-arguments to blanket statements.&lt;/p&gt;

&lt;p&gt;I thought of this topic primarily because I’ve gone through, and at times struggled, with many changes the past few months. I moved apartments, changed teams, gone through re-orgs, changed managers, acted as a manager, changed projects, and changed goals.&lt;/p&gt;

&lt;p&gt;With every change that occurred I felt more pressure to prove to myself that I was just as good, if not better, than before. In a way I ironically wanted to prove to myself that nothing had changed and that I could continue to progress just as quickly as before. While I view every change as a new opportunity, it’s easy for any change to add further weight or stress onto any state. My conclusion in facing numerous changes is to take the time to refocus by re-evaluating my goals.&lt;/p&gt;

&lt;p&gt;I’ve said before, but I want to optimize learning and trying as many things as I can. I don’t believe I’ve utilized where I live and where I work to the fullest extent. I want to figure out why I feel this way, and how I can better take advantage of my environment. In order to do so however I need to figure out in more detail what it is that I want to learn and do. Ultimately the main goal with this thought process is to build resilience and create an internal north star that focuses on honing my skills no matter how many external variables change.&lt;/p&gt;

&lt;p&gt;So far the pattern of the work I do is defined by what is needed around me. The solutions that I then implement come intuitively based off of what I think defines a good product experience. I’ve so far acted on intuition (and have honed habits, or a ‘comfortable’ train of thought with regards to how to build a great product) by having external variables define what I do. That’s not to say that I haven’t learned or grown this past year, nor that reacting to external factors isn’t a good way to grow. On the contrary I’ve grown more than I could’ve ever hoped for prior to having accepted my job offer. The next step I want to take though is how to continue challenging myself in the face of having found a niche I’m comfortable with.&lt;/p&gt;

&lt;p&gt;To practice the Socratic method - the other side could suggest that I can continue to develop my strength and focus in on what defines a great product experience (aka dive deep on what I’ve been doing). I’d then develop my original statement of “&lt;em&gt;I can challenge myself to find new areas of growth by seeking out different experiences&lt;/em&gt;” to “&lt;em&gt;Develop a well-rounded thought process to understand and recommend degrees of feasibility and necessity which could indirectly increase opportunities of finding other areas of strength&lt;/em&gt;”. Dang that’s a weak counterexample. The premise of the ‘refined’ statement is that I want to broaden and expand my skillset. For example, I can say that a great product experience can be limited by infrastructure right now; but I don’t know how or why and what solutions can solve this.&lt;/p&gt;

&lt;p&gt;#######&lt;/p&gt;

&lt;p&gt;This morning I took time to really learn. I went down the rabbit hole of reading article after articles of mikeash, nshipster, cocoawithlove, internal wikis on operating systems and performance optimizations. My new project requires me to understand the nuances of how the entire system works. While I know part of me wanted to work on iOS because I would have the opportunity to dive as deep as I wanted and better understand operating systems, not just the UI - diving deeper down the stack can be really intimidating.&lt;/p&gt;

&lt;p&gt;Where do I start? Asking questions.&lt;/p&gt;

&lt;p&gt;So what was the hard part? Running out of questions to ask because I wanted to ask ‘smart’ questions that are specific and seemed well-thought out.&lt;/p&gt;

&lt;p&gt;A really wise coworker let me know for this type of work it’s okay to start out by asking broader question - framing questions to the expert on hand with ‘Here’s what I think: a, b, c, d. What do you think about my thought process?’ and basing conversations and growth off of the experiences of senior engineers.&lt;/p&gt;

&lt;p&gt;That’s awesome. Already learning a new thought process.&lt;/p&gt;

&lt;p&gt;#######&lt;/p&gt;

&lt;p&gt;I want to explore ARKit and/or TensorFlow and attend a conference or MeetUp around picking up these technologies. I had a lot of fun helping create the Pokemon AR game two years back and want to do something similar again with a bit more functionality. I don’t know what role AR has to play other than in games and education just yet but after having watched these videos.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/r5eWys9B-no&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/OsnfQsBpKIs&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;I’m pretty stoked to try them out myself. Hopefully the perf work I’m starting to do at work can help contribute to the large battery drains that I observed previously when working with Unity and game dev. On another note I really wish I’d gone to the try!Swift conference, but that’s okay. Another year another time.&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Sep 2018 18:20:26 -0700</pubDate>
        <link>http://localhost:4000/quibbles/2018/09/27/Reacting-to-change.html</link>
        <guid isPermaLink="true">http://localhost:4000/quibbles/2018/09/27/Reacting-to-change.html</guid>
        
        
        <category>Quibbles</category>
        
      </item>
    
      <item>
        <title>What builds a community?</title>
        <description>&lt;p&gt;“A group of people living in the same place or having a particular characteristic in common.”&lt;/p&gt;

&lt;p&gt;This definition of ‘community’ suggests that people who disagree in opinions can still be in the same community. A single similar trait can grow a friendship. I find that concept fascinating.&lt;/p&gt;

&lt;p&gt;When greeting or passing others in the hallway it’s easy to ignore or ‘forget’ to say hi and make small talk. All speculation without any numbers to back this, but there seem to be more people who are entrenched in their own online bubbles where the feed algorithm and social apps show people content they know they’ll enjoy and like.&lt;/p&gt;

&lt;p&gt;Can a person online’s personality ever become the personality the show in person? I speak differently online than I do in person, but that’s primarily because I have the space to think about how to word the thoughts I have, or conversely, the ability to reply instantaneously without a second thought. I wonder if it’s possible to show our true selves online?&lt;/p&gt;

&lt;p&gt;Or are we at the point where our online selves are our true selves?&lt;/p&gt;

&lt;p&gt;Just food for thought.&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Jun 2018 18:20:26 -0700</pubDate>
        <link>http://localhost:4000/quibbles/2018/06/18/What-builds-a-community.html</link>
        <guid isPermaLink="true">http://localhost:4000/quibbles/2018/06/18/What-builds-a-community.html</guid>
        
        
        <category>Quibbles</category>
        
      </item>
    
      <item>
        <title>Nuggets</title>
        <description>&lt;p&gt;I wanted to share nuggets of wisdom from various people I’ve been meeting up within the industry. The primary questions I’ve been asking are what drives their confidence, what their journey entails, and what the most pivotal moment of their career has been so far. It was fascinating to learn and observe how everyone has their own style, work ethic and drive; and yet they all attained a relative degree of success and satisfaction that they wanted.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nugget #1: Optimize for happiness.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For me, this translates to building something useful for others: share warm and fuzzies, allow others to feel that they belong, and give people a platform to be heard by recognizing every person has a voice they can use. Facebook has the power to accomplish this, but more on this later.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nugget #2: Believe in yourself.&lt;/strong&gt; Continue doing what needs to be done, and the rest will follow.&lt;/p&gt;

&lt;p&gt;My mentor resolves conflicts by being so good others are unable to ignore them. Of course, it helps that my mentor loves to build and solve problems. Truly an inspiration for me to keep learning from. :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nugget #2.5: Trust yourself.&lt;/strong&gt; You’ll become better at estimating and setting deadlines. Tell your manager what the unknown factors are and add a little more time into how long you think it might actually take.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nugget #3: Break things to learn!&lt;/strong&gt; Break apart small pieces to figure out what makes a solution work. For any challenge you’re facing, someone has probably already built a solution or something that’s similar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nugget #4: Keep on moving forward.&lt;/strong&gt; As long as you don’t hate what you’re doing and don’t hate your team - keep at it. There’s always a better way to do something, and you should always recognize that. But don’t beat yourself up for not implementing the perfect solution right off the bat. Recognize that there’s always a better way to build what you’re building, but also recognize that you’ve gotten better, you’ve improved, and that you’ve learned.&lt;/p&gt;

&lt;p&gt;My mentor encouraged me to look back at old code I’ve written, then realize that I probably wouldn’t have written it that way if I were to do it again. And that’s progress.&lt;/p&gt;

&lt;p&gt;After meeting up with multiple people, I also realized it’s not just advice I was looking for. I was looking for some way to find myself and find my own drive, intuition, and confidence. But at some point I just have to tune out the self-doubt I have in order to focus on what’s next. Just keep moving forward and the path will follow.&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Jun 2018 18:20:26 -0700</pubDate>
        <link>http://localhost:4000/reflections/advice/2018/06/18/Nuggets.html</link>
        <guid isPermaLink="true">http://localhost:4000/reflections/advice/2018/06/18/Nuggets.html</guid>
        
        
        <category>Reflections</category>
        
        <category>Advice</category>
        
      </item>
    
      <item>
        <title>Day 0</title>
        <description>&lt;p&gt;It’s been awhile again but I’ve been feeling a bit burnt out from work. Thus the need to force myself to reflect more often! So guiding questions if not for today, for every day:&lt;/p&gt;

&lt;p&gt;What are three things that made me happy today? (I declare these warm and fuzzies).&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spending a late Sunday night playing board games spontaneously with friends while making Yu-Gi-Oh jokes to ‘trust in the heart of the cards’ and d-d-d-d-d-d-d-duel! Spontaneity I feel is harder to come by as years pass, so I lean more into the moment and appreciate how and when it happens.&lt;/li&gt;
  &lt;li&gt;Chatting with my grandma, exchanging gossip and being able to remind her that I’ll see her soon.&lt;/li&gt;
  &lt;li&gt;Seeing the California skyline - backdrop of mountains with a splatter of blue accented white background. California is beautiful and the scenic landscape definitely brought a smile to my face as I was driving down 237 today.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I don’t have much on my mind lately which worries me. The one thing I don’t want to become is a mindless worker bee that fulfills the expectations and plans passed down from above. Time passes without me realizing, and within a blink of an eye it’s already been almost a year since I’ve moved to the bay area. That frightens me, so how can I take back the reigns and take control of what happens daily? What’s my next step?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/hobbes_weird.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Step 1. Lean into what I know – time to start tinkering and put the anime away!&lt;/p&gt;

&lt;p&gt;Step 2. Idea pot - quick, jot down all the things that come to mind within a minute:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Convert all the photos that get shared on Messenger in my family group chat into an album for my family to search through. Add in some photo recognition technology to allow people to easily search by date, place, name/nickname.&lt;/li&gt;
  &lt;li&gt;Happiness jar that lets me jot down notes or special moments that make me happy every day for me to look back on. The goal is to help motivate through rough patches and remind myself just how beautiful life is.&lt;/li&gt;
  &lt;li&gt;Create one frame of an animation you love. (Though tbh this has been on my mind for awhile, but it seems so difficult I haven’t really looked much into it.)&lt;/li&gt;
  &lt;li&gt;Running journal - the one I mentioned a while back but never finished LOL.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Step 3. I’m making this up here - so I’m assuming this step should be a plan of action to commit to. Do what I love and ignore all of the wanted accolades, awards, recognition, whatever that puts unnecessary stress on myself. I can only control what I do, and how I feel about myself.&lt;/p&gt;

&lt;p&gt;I’m not too sure what should or will come of this, but I hope I’ll create a project some time soon on Github. I like the idea of a happiness jar honestly. Should be a fairly straightforward thing to make - I’ll put up some prototypes and get to work.&lt;/p&gt;

&lt;p&gt;Lastly, I challenge myself this week to ask to grab lunch with one of my role models at work. One of my coworkers I highly admire recently left. Regrettably I wasn’t able to say my farewells and thank you’s in person because I chickened out. I honestly can’t remember the last time I’ve been so timid at work to the point where I regret not doing something so badly. I don’t want that to happen again - thus this challenge. Like spontaneity, I need to lean in to my fear. And with that, the quote of the day is:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;“The most difficult thing is the decision to act, the rest is merely tenacity. The fears are paper tigers. You can do anything you decide to do. You can act to change and control your life; and the procedure, the process is its own reward.” - Amelia Earhart&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 20 May 2018 00:20:26 -0700</pubDate>
        <link>http://localhost:4000/quibbles/reflections/2018/05/20/Day-0.html</link>
        <guid isPermaLink="true">http://localhost:4000/quibbles/reflections/2018/05/20/Day-0.html</guid>
        
        
        <category>Quibbles</category>
        
        <category>Reflections</category>
        
      </item>
    
      <item>
        <title>Adventure Time</title>
        <description>&lt;p&gt;There’s more to life than solely success.&lt;/p&gt;

&lt;p&gt;The pursuit of happiness; the desire to see who others are for who they are. To recognize that everyone is fighting their own battles. We are who we are, and although it’s simple enough to say, to truly always be accepting of others and of myself is so much more challenging.&lt;/p&gt;

&lt;p&gt;This past weekend I had the amazing opportunity to travel to New York. Call it a whim - but it’s helped me open my eyes even more.&lt;/p&gt;

&lt;p&gt;It’s so easy to get caught up in everyday life. I know I’ve reflected on this before already. But I still haven’t learned a good handle on how to remind myself to enjoy where I am. I have a tendency to rush through the things I do because I’m impatient to get to the next step, to get to the next level, to get to the next stage of my life.&lt;/p&gt;

&lt;p&gt;People always tell me - enjoy where you are now because you only live your life once. #yolo.&lt;/p&gt;

&lt;p&gt;But I always disliked that piece of advice. It made me feel as if they know something about where they are now, that I don’t. That they’ve already overcome challenges that I have yet to even know about - and who likes feeling left out?&lt;/p&gt;

&lt;p&gt;But it’s so easy to forget how beautiful and wonderful life is. How every single moment, every challenge is precious and unable to be repeated. I could argue that there’s a diminishing margins of returns to everything that I do, and another side could argue the inevitable “it depends.”&lt;/p&gt;

&lt;p&gt;I brought up New York because I discovered there’s so much more of the world that I have yet to see. Even though it wasn’t my first time there (I hated my first visit there for the record), I was fascinated by how I was able to walk down the street and neither understand nor recognize any of the languages being spoken. Given, I was walking down a pretty touristy area right next to Wall Street; but I was amazed by the diversity of the people. I kept waiting, smiling at my stupid excitement, waiting for some couple or some family or some group of people or some one to walk by and speak english - but no one did. And how I loved it.&lt;/p&gt;

&lt;p&gt;There’s so much more to life than I can even dream about. Tell that to five year old me and you’d catch me staring back at you with the answer, “but I like the candy I dream about.” The beyond and the unknown used to scare me; but it’s exciting and motivating. I want to see the world’s wonders and challenge the scope of how I view the world. I want to continue to have these paradigm shifts. I want to hear people’s stories. I don’t think traveling is the answer, but it’s one of the means. I think more importantly is the desire for me to see and to listen. To push myself out of my comfort zone and to socialize more with people.&lt;/p&gt;

&lt;p&gt;This reminds me of a conversation I had with a friend of mine recently. He asked me, “How do you work so hard and stay motivated?” I looked at him, amazed that he even thought I worked hard. And further, “What’s your end goal?”&lt;/p&gt;

&lt;p&gt;I don’t know. But I think we make people who we think they are in our minds. That’s not to say that his opinion of me isn’t true or justified. My point isn’t about the validity of the statement or to even answer the question, but to remark how the way I see myself isn’t the way how others see me and vice versa. It’s fascinating to me how the human mind works. Questions, the desire to know how others think and do; the desire to understand and learn more. It helps make connections and establish a common ground to walk together though.&lt;/p&gt;

&lt;p&gt;The fact that we all come from different walks of life and yet are so troubled by our own problems we forget that sometimes the answer lies in simply talking to others.&lt;/p&gt;

&lt;p&gt;“Be the change you wish to see in the world.” - Mahatma Gandhi. My sister used to wear this shirt all the time; maybe to help advertise people to join the high school JSA club advertised on the front of the shirt. (kidding). I think we all aspire to be more - to make a difference and assert our place in the world.  I think we all have the desire to be someone - someone to be remembered, someone who’s invaluable, someone who feels as if they belong and are needed.&lt;/p&gt;

&lt;p&gt;(Rambling again. But some in literature could call it a stream of consciousness. I don’t recommend that book by James Joyce by the way. The stream of consciousness was terrible to follow).&lt;/p&gt;

&lt;p&gt;I’m just beginning my own journey and I’m so truly excited for what’s to come because where I’m at now. By golly gosh darn. Life’s simply amazing because I allow it to be.&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Mar 2018 23:20:26 -0800</pubDate>
        <link>http://localhost:4000/quibbles/reflections/2018/03/03/Adventure-Time.html</link>
        <guid isPermaLink="true">http://localhost:4000/quibbles/reflections/2018/03/03/Adventure-Time.html</guid>
        
        
        <category>Quibbles</category>
        
        <category>Reflections</category>
        
      </item>
    
      <item>
        <title>How to define success</title>
        <description>&lt;p&gt;I’ve decided I want to define success more concretely, and I happened upon a great read this past weekend that inspired this redefinition. Rather than to be defined or (what I feel at times) restricted to the job I have, the role I play on my team, or the lines of code I write a day, I want to define success on the basis of the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the number minutes I spend running every day in order to stay healthy and do all the things I want to do in life.&lt;/li&gt;
  &lt;li&gt;the number of times I laugh or enjoy the conversations I have by staying present and open-minded to situations around me.&lt;/li&gt;
  &lt;li&gt;the number of minutes I spend on the phone with my parents because I care about my family.&lt;/li&gt;
  &lt;li&gt;the number of times I speak up among a group of people in order to remember I have a voice.&lt;/li&gt;
  &lt;li&gt;the number of lessons learned to satisfy my love of learning and desire to understand.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Health, presence, family, attitude and aptitude. Suffice it to say I think these can act as goals to ground me throughout the day to concentrate more on what I want to do, and less on what I do.&lt;/p&gt;

&lt;p&gt;While there’s no measure that I can compare myself to just yet, I can create some type of iPython notebook to track (at the very least) physical exercise. I’ve been wanting to get a little more in data analysis. And plus I’m signed up for the half marathon so honestly I should be running more than the 2-3 miles I get. THREE BIRDS WITH ONE STONE! Oh wait, four! Because this way I can guarantee comparisons of myself to me (rather than others).&lt;/p&gt;

&lt;p&gt;Now though, I’m wondering how do these definitions of success relate to the goals that I have at work?&lt;/p&gt;

&lt;p&gt;I guess to put a different spin on it: in order to learn more, I have to review more code, and ask questions to code more effectively. In a way, the more I do, the more I learn. So by the communicative property, if learning comes first, inherently, the goals or expectations set at work will follow. I think the most important lesson I’ve learned is, “Me first.” Because honestly there’s no one else that will ever do so, nor would I want them to. I have to own my own way and what I do. To do this I have to be comfortable with putting myself first.&lt;/p&gt;

&lt;p&gt;This doesn’t mean I should become a jackass or some arrogant coworker who only thinks of what I want and ignores all else. I still have my values to keep me in check for that thankfully. Rather, it’s more I want to focus on what I want to accomplish, how to get to where I want to go; rather than to concentrate on how others are doing or give in to the norm. For example the other day at Costco there was this couple that cut in front of me. And rather than speaking up, I just stood there silently and took it. While this may be an extreme example, it’s been aggravating me that I hadn’t spoke up.&lt;/p&gt;

&lt;p&gt;But at the same time that’s okay because I can take it as a learning experience. I just need to practice what I should say in these settings because I’m not used to that happening to me. (I mean come on, I’m a cute Asian girl; who can ignore me :P). In any case, next time I’m prepared to say, “Excuse me sir/miss, I was already here in line,” and then give them a chance to explain themselves. If they’re in some sort of emergency then by all means take my spot; but I shouldn’t let people take advantage of me.&lt;/p&gt;

&lt;p&gt;Random other goals I’ll update at another time but want to jot down for now:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;I want to increase my circle of influence.&lt;/li&gt;
  &lt;li&gt;I want to go backpacking or camping in the mountains.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cheerios,&lt;/p&gt;

&lt;p&gt;Sarah&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The world needs dreamers and the world needs doers. But above all, the world needs dreamers who do.&lt;/em&gt; - Sarah Ban Breathnach&lt;/p&gt;
</description>
        <pubDate>Sun, 04 Feb 2018 23:20:26 -0800</pubDate>
        <link>http://localhost:4000/quibbles/reflections/2018/02/04/How-to-define-success.html</link>
        <guid isPermaLink="true">http://localhost:4000/quibbles/reflections/2018/02/04/How-to-define-success.html</guid>
        
        
        <category>Quibbles</category>
        
        <category>Reflections</category>
        
      </item>
    
      <item>
        <title>Subclassing and Alternatives</title>
        <description>&lt;p&gt;Sunday learning for today has taken me longer than usual. At the same time I think it’s quite necessary to understand these various patterns that come across often: subclass, protocol, delegation, configuration objects, composition.&lt;/p&gt;

&lt;p&gt;Subclassing by itself seems to make sense; but I get mixed up when I look at protocol and delegation together. But first let’s stick with what I’ve found out about subclassing and I’ll save comparing the two patterns for next time.&lt;/p&gt;

&lt;p&gt;Class clusters hide implementation details behind abstract classes. However, because objective-c has nothing to label classes as ‘abstract,’ convention is therefore found in the docs. (Which honestly I find pretty arbitrary and confusing..) Class clusters is a type of factory pattern that defines all the necessary logic those that inherit the base class must implement. In other words: subclasses can override default implementation of base classes. Here’s an example of a subclass with my favorite example using Pokemon:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Abstract base class&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;NS_ENUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSUInteger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PokemonType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;PokemonTypeWater&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;PokemonTypeFire&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;PokemonTypeGrass&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pokemon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NSObject&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSUInteger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pokemon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pokemonWithType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PokemonType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Subclass&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PokemonWater&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pokemon&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PokemonWater&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attack&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;waterGun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the subclass example, &lt;code class=&quot;highlighter-rouge&quot;&gt;attack&lt;/code&gt; method is required to implement Pokemon. When checking for equality between subclasses, use &lt;code class=&quot;highlighter-rouge&quot;&gt;isKindOfClass:[Pokemon class]&lt;/code&gt; method rather than comparing with &lt;code class=&quot;highlighter-rouge&quot;&gt;[Pokemon class]&lt;/code&gt; itself.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Subclasses should inherit from the class cluster’s abstract base class.&lt;/li&gt;
  &lt;li&gt;Subclass should define its own storage.&lt;/li&gt;
  &lt;li&gt;Subclass should override required methods of superclass.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Out of all these rules for subclassing, the second one is the most confusing to me. So let’s walk through another Pokemon example.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PokemonWater&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pokemon&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initWithPokemon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pokemon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pokemon&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PokemonWater&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;waterPokemonFromPokemon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pokemon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pokemon&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In implementation:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PokemonWater&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;initWithPokemon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pokemon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pokemon&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Defining own storage from Pokemon type by calling on the superclass
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// method for defining a Pokemon.
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initWithLevel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pokemon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;level&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;personality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pokemon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;personality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PokemonWater&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;waterPokemonFromPokemon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pokemon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pokemon&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Again, defining own storage.
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PokemonWater&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initWithPokemon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pokemon&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Overall it looks like subclasses are more commonly used for implementing custom parts of a platform, and model objects. i.e. in view controllers when we subclass UIViewController; or building a UITableViewCell with custom layout. Any time something can be more reusable across other parts of the project seem to be a good opportunity to subclass.&lt;/p&gt;

&lt;p&gt;Until next time. Back to work!&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Feb 2018 23:20:26 -0800</pubDate>
        <link>http://localhost:4000/obj-c/2018/02/03/Subclassing-and-Alternatives.html</link>
        <guid isPermaLink="true">http://localhost:4000/obj-c/2018/02/03/Subclassing-and-Alternatives.html</guid>
        
        
        <category>Obj-C</category>
        
      </item>
    
      <item>
        <title>Quibbles</title>
        <description>&lt;p&gt;I need to learn about ‘Message Forwarding and Method Swizzling’ today, but I just have to share a few quotes I’m reading from what is becoming my favorite book so far.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;All the Light We Cannot See&lt;/em&gt; has captivated my imagination and attention. Anthony Doerr has a way with words that captures all senses succinctly to paint an imagery as if I’m there with the characters he’s describing, living out the plot in real time as I read.&lt;/p&gt;

&lt;p&gt;In the book, a young girl who became blind experiences the world the way she knows how: through sound logic, reason, and the ability to accept her fears and see the world her own way.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The faintly metallic smell of the falling snow surrounds her. &lt;em&gt;Calm yourself. Listen.&lt;/em&gt;” - Anthony Doerr&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Too often I’m lost in the depths of my thoughts when all I need to do is take a deep breath, and take the next step forward. Here, Marie-Laure is learning how to walk with her cane. Every week her father challenges her to lead them home, and every week she gets a little better despite her frustrations and disbelief she can. Little by little, week after week she makes progress until she eventually and finds her way.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“In another half second her father’s hands are in her armpits, swinging her up, and Marie-Laure smiles, and he laughs a pure, contagious laugh, one she will try to remember all her life, father and daughter turning in circles on the sidewalk in front of their apartment house, laughing together while snow sifts through the branches above.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’ve fallen in love with Marie-Laure. A little girl who has all the patience in the world it seems, with a loving father who is determined to stay by her side and give her the tools to live her life the way she can. Moments like these make me fill me with warm and fuzzies. The best moments.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;“Open your eyes…and see what you can with them before they close forever.”&lt;/em&gt; - Anthony Doerr&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here’s to continuing to explore and learn; to keep plodding along. Despite the increasingly long hours I spend at work it’s honestly so exciting to see how we breathe life into a product. I feel extremely grateful to be a part of the grueling process to make something that’s so carefully researched and thought out. As for our deadline, we’ll see whether we can make it. When our deadline is set won’t determine what I’ll accomplish. I can only control what I do every day - step after step, task after task, and how I challenge myself to move faster, improve, and learn more.&lt;/p&gt;
</description>
        <pubDate>Sat, 27 Jan 2018 23:20:26 -0800</pubDate>
        <link>http://localhost:4000/quibbles/2018/01/27/Quibbles.html</link>
        <guid isPermaLink="true">http://localhost:4000/quibbles/2018/01/27/Quibbles.html</guid>
        
        
        <category>Quibbles</category>
        
      </item>
    
  </channel>
</rss>
